---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<movies_api_key>&include_adult=false&page=1&query=The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 20:22:30 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 0d76f93b1f078e608b08228076405b96.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD53-C2
      X-Amz-Cf-Id:
      - IhvebBpZH63LL-f9TgcNkME4FVaPdFK3f9I27yK0xO34UsYg8_uDxw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 20:22:30 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<movies_api_key>&include_adult=false&page=2&query=The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 30 Aug 2021 20:22:30 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f3e7670b93737db37c2c800d1901470c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD53-C2
      X-Amz-Cf-Id:
      - JsLwm8Nbj5vihu_pdp0x6ePzb5H30vDk1IfI3OQN8sKmMtTJc2Z2vQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 30 Aug 2021 20:22:31 GMT
recorded_with: VCR 6.0.0
